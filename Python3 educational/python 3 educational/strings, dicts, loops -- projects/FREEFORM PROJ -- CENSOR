# These are the emails you will be censoring. The open() function is opening the text file that the emails are contained in and the .read() method is allowing us to save their contexts to the following variables:
email_one = open("email_one.txt", "r").read()
email_two = open("email_two.txt", "r").read()
email_three = open("email_three.txt", "r").read()
email_four = open("email_four.txt", "r").read()

#defined lists
email_one_censored = ""
proprietary_terms = ["she", "personality matrix", "sense of self", "self-preservation", "learning algorithm", "her", "herself"]
negative_words = ["concerned", "behind", "danger", "dangerous", "alarming", "alarmed", "out of control", "help", "unhappy", "bad", "upset", "awful", "broken", "damage", "damaging", "dismal", "distressed", "distressed", "concerning", "horrible", "horribly", "questionable"]

#global functions
def censor_phrase(email_file):
  censored_email = ""
  censored_email = email_file.replace('learning algorithms', '*****')
  return censored_email

def censor_p_terms(email_file):
  censored_email = ""
  for i in range(len(proprietary_terms)):
    censored_email = email_file.replace(proprietary_terms[i], '*****')
    email_file = censored_email
  return email_file

def BOI_censor(email_file):
  censored_file = ""
  censored_email = ""
  for i in range(len(proprietary_terms)):
    censored_email = email_file.replace(proprietary_terms[i], '*****')
    email_file = censored_email
    for j in range(len(negative_words)): 
      censored_file = email_file.replace(negative_words[j], '*****')
      email_file = censored_file
  
def comp_censor(email_file):
  censored_file = ""
  censored_email = ""
  empty_list = []
  for i in range(len(proprietary_terms)):
    censored_email = email_file.replace(proprietary_terms[i], '-----')
    email_file = censored_email
    for j in range(len(negative_words)): 
      censored_file = email_file.replace(negative_words[j], '-----')
      email_file = censored_file
  empty_list.append(email_file.split('-----'))
  for char in empty_list:
    print(char)
    print(len(char))
  #print(empty_list)
  return email_file
        
  
 

#user calls
#print(censor_phrase(email_one))
#print(censor_p_terms(email_two))
(comp_censor(email_four))
