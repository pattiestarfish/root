class Menu:
  def __init__(self, name, items, start_time, end_time):
    self.name = name
    self.items = items
    self.start_time = start_time
    self.end_time = end_time

  def __repr__(self):
    return '-=-MENU NAME-=- \n' + str(self.name) + '\n' + str(self.items)
brunch = Menu("brunch", {'pancakes': 7.50, 'waffles': 9.00, 'burger': 11.00, 'home fries': 4.50, 'coffee': 1.50, 'espresso': 3.00, 'tea': 1.00, 'mimosa': 10.50, 'orange juice': 3.50}, 11, 16)
#3pm-6pm 
early_bird = Menu("early_bird", {
  'salumeria plate': 8.00, 'salad and breadsticks (serves 2, no refills)': 14.00, 'pizza with quattro formaggi': 9.00, 'duck ragu': 17.50, 'mushroom ravioli (vegan)': 13.50, 'coffee': 1.50, 'espresso': 3.00,
}, 15, 18)
#5pm-11pm
dinner = Menu("dinner", {
  'crostini with eggplant caponata': 13.00, 'ceaser salad': 16.00, 'pizza with quattro formaggi': 11.00, 'duck ragu': 19.50, 'mushroom ravioli (vegan)': 13.50, 'coffee': 2.00, 'espresso': 3.00,
}, 17, 23)

kids = Menu("kids", {
  'chicken nuggets': 6.50, 'fusilli with wild mushrooms': 12.00, 'apple juice': 3.00
}, 11, 21)

print(brunch)
print(early_bird)
print(dinner)
print(kids)
------------------------------------
class Menu:
  def __init__(self, name, items, start_time, end_time):
    self.name = name
    self.items = items   
    self.start_time = start_time
    self.end_time = end_time

  def calculate_bill(self, purchased_items):
    bill = 0
    for item in self.items:
      if item in purchased_items:
        bill += (self.items[item])
    print('Your total bill for ' + str(purchased_items) + ' is $' + str(bill) + '.\n')

  def __repr__(self):
    #reformatting 24h time
    if(self.start_time<12):
      self.start_time = str(self.start_time) + 'am'
    elif(self.start_time == 12):
      self.start_time = str(self.start_time) + 'pm'
    else:
      self.start_time = str((int(self.start_time) - 12)) + 'pm'
    if(self.end_time<12):
      self.end_time = str(self.end_time) + 'am'
    elif(self.end_time == 12):
      self.end_time = str(self.end_time) + 'pm'
    else:
      self.end_time = str((int(self.end_time) - 12)) + 'pm'

    return '-=-' + (self.name) + " " + 'menu-=- \n' + 'available from ' + self.start_time + ' to ' + self.end_time + '\n'+ str(self.items) + '\n'

class Franchise:
  def __init__(self, address, menus):
    self.address = address
    self.menus = menus
  def __repr__(self):
    return 'located at ' + self.address
  def available_menus(self, time):
    for menu in self.menus:
      print(menu)
    

#    if((self.menus).start_time >= time <= (self.menus).end_time):
##   return avail


#---------------------------------------------------
brunch = Menu("brunch", {'pancakes': 7.50, 'waffles': 9.00, 'burger': 11.00, 'home fries': 4.50, 'coffee': 1.50, 'espresso': 3.00, 'tea': 1.00, 'mimosa': 10.50, 'orange juice': 3.50}, 11, 16)
#3pm-6pm 
early_bird = Menu("early bird", {'salumeria plate': 8.00, 'salad and breadsticks (serves 2, no refills)': 14.00, 'pizza with quattro formaggi': 9.00, 'duck ragu': 17.50, 'mushroom ravioli (vegan)': 13.50, 'coffee': 1.50, 'espresso': 3.00}, 15, 18)
#5pm-11pm
dinner = Menu("dinner", {'crostini with eggplant caponata': 13.00, 'ceaser salad': 16.00, 'pizza with quattro formaggi': 11.00, 'duck ragu': 19.50, 'mushroom ravioli (vegan)': 13.50, 'coffee': 2.00, 'espresso': 3.00}, 17, 23)

kids = Menu("kids", {'chicken nuggets': 6.50, 'fusilli with wild mushrooms': 12.00, 'apple juice': 3.00}, 11, 21)


#user calls
print(brunch)
print(early_bird)
print(dinner)
print(kids)

brunch.calculate_bill(['pancakes', 'home fries', 'coffee'])
early_bird.calculate_bill(['salumeria plate', 'mushroom ravioli (vegan)'])

#franchise instances
flagship_store = Franchise('1232 West End Road', [brunch, early_bird, dinner, kids])
new_installment = Franchise('12 East Mulberry Street', [brunch, early_bird, dinner, kids])

print(flagship_store)
flagship_store.available_menus(12)
--------------------------------------
class Menu:
  def __init__(self, name, items, start_time, end_time):
    self.name = name
    self.items = items   
    self.start_time = start_time
    self.end_time = end_time

  def calculate_bill(self, purchased_items):
    bill = 0
    for item in self.items:
      if item in purchased_items:
        bill += (self.items[item])
    print('Your total bill for ' + str(purchased_items) + ' is $' + str(bill) + '.\n')

  def __repr__(self):
    #reformatting 24h time
    if(self.start_time<12):
      self.start_time = (self.start_time) #+ 'am'
    elif(self.start_time == 12):
      self.start_time = (self.start_time)# + 'pm'
    else:
      self.start_time = ((int(self.start_time) - 12)) #+ 'pm'
    if(self.end_time<12):
      self.end_time = (self.end_time)# + 'am'
    elif(self.end_time == 12):
      self.end_time = (self.end_time) #+ 'pm'
    else:
      self.end_time = ((int(self.end_time) - 12))# + 'pm'

    return '-=-' + (self.name) + " " + 'menu-=- \n' + 'available from ' + self.start_time + ' to ' + self.end_time + '\n'+ str(self.items) + '\n'

class Franchise:
  def __init__(self, address, menus):
    self.address = address
    self.menus = menus
  def __repr__(self):
    return 'located at ' + self.address
  def available_menus(self, time):
    for men in self.menus:
      print(men)
      if(int(men.start_time) <= time and int(men.end_time) >= time): 
        print(men) 
    

#    if((self.menus).start_time >= time <= (self.menus).end_time):
##   return avail


#---------------------------------------------------
brunch = Menu("brunch", {'pancakes': 7.50, 'waffles': 9.00, 'burger': 11.00, 'home fries': 4.50, 'coffee': 1.50, 'espresso': 3.00, 'tea': 1.00, 'mimosa': 10.50, 'orange juice': 3.50}, 11, 16)
#3pm-6pm 
early_bird = Menu("early bird", {'salumeria plate': 8.00, 'salad and breadsticks (serves 2, no refills)': 14.00, 'pizza with quattro formaggi': 9.00, 'duck ragu': 17.50, 'mushroom ravioli (vegan)': 13.50, 'coffee': 1.50, 'espresso': 3.00}, 15, 18)
#5pm-11pm
dinner = Menu("dinner", {'crostini with eggplant caponata': 13.00, 'ceaser salad': 16.00, 'pizza with quattro formaggi': 11.00, 'duck ragu': 19.50, 'mushroom ravioli (vegan)': 13.50, 'coffee': 2.00, 'espresso': 3.00}, 17, 23)

kids = Menu("kids", {'chicken nuggets': 6.50, 'fusilli with wild mushrooms': 12.00, 'apple juice': 3.00}, 11, 21)


#user calls
print(brunch)
print(early_bird)
print(dinner)
print(kids)
menus = []
menus = [brunch, early_bird, dinner, kids]
brunch.calculate_bill(['pancakes', 'home fries', 'coffee'])
early_bird.calculate_bill(['salumeria plate', 'mushroom ravioli (vegan)'])

#franchise instances
flagship_store = Franchise('1232 West End Road', menus)
new_installment = Franchise('12 East Mulberry Street', menus)

print(flagship_store)
flagship_store.available_menus(12)
-------------------------------------------------------
#update
class Menu:
  def __init__(self, name, items, start_time, end_time):
    self.name = name
    self.items = items   
    self.start_time = start_time
    self.end_time = end_time

  def calculate_bill(self, purchased_items):
    bill = 0
    for item in self.items:
      if item in purchased_items:
        bill += (self.items[item])
    print('Your total bill for ' + str(purchased_items) + ' is $' + str(bill) + '.\n')

  def __repr__(self):
    #reformatting 24h time
    if(self.start_time<12):
      self.start_time = (self.start_time) #+ 'am'
    elif(self.start_time == 12):
      self.start_time = (self.start_time)# + 'pm'
    else:
      self.start_time = ((int(self.start_time) - 12)) #+ 'pm'
    if(self.end_time<12):
      self.end_time = (self.end_time)# + 'am'
    elif(self.end_time == 12):
      self.end_time = (self.end_time) #+ 'pm'
    else:
      self.end_time = ((int(self.end_time) - 12))# + 'pm'

    return '-=-' + (self.name) + " " + 'menu-=- \n' + 'available from ' + str(self.start_time) + ' to ' + str(self.end_time) + '\n'+ str(self.items) + '\n'

class Franchise:
  def __init__(self, address, menus):
    self.address = address
    self.menus = menus
  def __repr__(self):
    return 'located at ' + self.address

  def available_menus(self, time):
    for men in self.menus:
      if(int(men.start_time) <= time and int(men.end_time) >= time): 
        print(men) 
#    if((self.menus).start_time >= time <= (self.menus).end_time):
#   return avail
  
class Business:
  def __init__(self, name, franchises):
    self.name = name
    self.franchises = franchises
  def __repr__(self):
    return "Business name: " + self.name + '\nFranchises: ' + str(self.franchises)

#---------------------------------------------------
class Menu:
  def __init__(self, name, items, start_time, end_time):
    self.name = name
    self.items = items   
    self.start_time = start_time
    self.end_time = end_time

  def calculate_bill(self, purchased_items):
    bill = 0
    for item in self.items:
      if item in purchased_items:
        bill += (self.items[item])
    print('Your total bill for ' + str(purchased_items) + ' is $' + str(bill) + '.\n')

  def __repr__(self):
    #reformatting 24h time
    if(self.start_time<12):
      self.start_time = (self.start_time) #+ 'am'
    elif(self.start_time == 12):
      self.start_time = (self.start_time)# + 'pm'
    else:
      self.start_time = ((int(self.start_time) - 12)) #+ 'pm'
    if(self.end_time<12):
      self.end_time = (self.end_time)# + 'am'
    elif(self.end_time == 12):
      self.end_time = (self.end_time) #+ 'pm'
    else:
      self.end_time = ((int(self.end_time) - 12))# + 'pm'

    return '-=-' + (self.name) + " " + 'menu-=- \n' + 'available from ' + str(self.start_time) + ' to ' + str(self.end_time) + '\n'+ str(self.items) + '\n'

class Franchise:
  def __init__(self, address, menus):
    self.address = address
    self.menus = menus
  def __repr__(self):
    return 'located at ' + self.address

  def available_menus(self, time):
    for men in self.menus:
      if(men.start_time <= time and men.end_time >= time): 
        print(men) 
#    if((self.menus).start_time >= time <= (self.menus).end_time):
#   return avail
  
class Business:
  def __init__(self, name, franchises):
    self.name = name
    self.franchises = franchises
  def __repr__(self):
    return "Business name: " + self.name + '\nFranchises: ' + str(self.franchises)

#---------------------------------------------------
brunch = Menu("brunch", {'pancakes': 7.50, 'waffles': 9.00, 'burger': 11.00, 'home fries': 4.50, 'coffee': 1.50, 'espresso': 3.00, 'tea': 1.00, 'mimosa': 10.50, 'orange juice': 3.50}, 11, 16)
#3pm-6pm 
early_bird = Menu("early bird", {'salumeria plate': 8.00, 'salad and breadsticks (serves 2, no refills)': 14.00, 'pizza with quattro formaggi': 9.00, 'duck ragu': 17.50, 'mushroom ravioli (vegan)': 13.50, 'coffee': 1.50, 'espresso': 3.00}, 15, 18)
#5pm-11pm
dinner = Menu("dinner", {'crostini with eggplant caponata': 13.00, 'ceaser salad': 16.00, 'pizza with quattro formaggi': 11.00, 'duck ragu': 19.50, 'mushroom ravioli (vegan)': 13.50, 'coffee': 2.00, 'espresso': 3.00}, 17, 23)

kids = Menu("kids", {'chicken nuggets': 6.50, 'fusilli with wild mushrooms': 12.00, 'apple juice': 3.00}, 11, 21)

arepas_menu = Menu("Take a\' Arepa", {'arepa pabellon': 7.00, 'pernil arepa': 8.50, 'guayanes arepa': 8.00, 'jamon arepa': 7.50}, 10, 20)

menus = []
menus = [brunch, early_bird, dinner, kids]

#user calls
#brunch.calculate_bill(['pancakes', 'home fries', 'coffee'])
early_bird.calculate_bill(['salumeria plate', 'mushroom ravioli (vegan)'])

#franchise instances
flagship_store = Franchise('1232 West End Road', menus)
new_installment = Franchise('12 East Mulberry Street', menus)
arepas_place = Franchise('189 Fitzgerald Avenue', [arepas_menu])
#franchises = [flagship_store, new_installment, arepas_place]
basta = Business('Basta Fazoolin\' with my Heart', [flagship_store, new_installment])

arepa = Business("Take a' Arepa", [arepas_place])


#print(flagship_store.available_menus(17))
print(arepa.franchises[0].menus[0])
print(basta.franchises[0].menus[0])
