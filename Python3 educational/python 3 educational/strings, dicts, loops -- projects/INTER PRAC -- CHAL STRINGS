def substring_between_letters(word, start, end):
  index1 = 0
  index2 = 0
  temp = ""
  if(start in word):
    if(end in word):
      index1 = word.find(start)
      index2 = word.find(end)
      temp = word[index1+1:index2]
      return temp
    else:
      return word

# Uncomment these function calls to test your function:
print(substring_between_letters("apple", "p", "e"))
# should print "pl"
print(substring_between_letters("apple", "p", "c"))
# should print "apple"
-------------------
def x_length_words(sentence, x):
  words = []
  for word in sentence:
    words = sentence.split(" ")
  for word in words:
    if(len(word) >= x):
      continue
    else:
      return False
  return True

print(x_length_words("i like apples", 2))
# should print False
print(x_length_words("he likes apples", 2))
# should print True
-------------------
# Write your count_multi_char_x function here:
def count_multi_char_x(word, x):
  temp = []
  temp = word.split(x)
  return (len(temp)-1)

# Uncomment these function calls to test your function:
print(count_multi_char_x("mississippi", "iss"))
# should print 2
print(count_multi_char_x("apple", "pp"))
# should print 1
-------------------------
def check_for_name(sentence, name):
  lst1=[]
  lst2=[]
  up_low_names = []
  for char in name:
    lst1.append(char.upper())
    lst2.append(char.lower())
  i = 0
  for char in sentence[-len(name):]:
    if(char == lst1[i] or char == lst2[i]):
      i += 1
      continue
    else:
      return False
  return True
       
print(check_for_name("My name is Jamie", "Jamie"))
# should print True
print(check_for_name("My name is jamie", "Jamie"))
# should print True
print(check_for_name("My name is Samantha", "Jamie"))
# should print False 
---------------------------------
def every_other_letter(word):
  lst = []
  string = ""
  i = 0
  for char in word:
    if i % 2 == 0:
      lst.append(char)
    i += 1
  for cha in lst:
    string += cha
  return string

print(every_other_letter("Codecademy"))
# should print Cdcdm
print(every_other_letter("Hello world!"))
# should print Hlowrd
print(every_other_letter(""))
# should print 
------------------------
# Write your reverse_string function here:
def reverse_string(word):
  lst = []
  string = ""
  for num in range(len(word)):
    lst.append(num)
  i = 1
  j = 0
  for char in word:
    lst[-i] = char
    i += 1
  for cha in word:
    string += str(lst[j])
    j += 1
  return string

# Uncomment these function calls to test your  function:
print(reverse_string("Codecademy"))
# should print ymedacedoC
print(reverse_string("Hello world!"))
# should print !dlrow olleH
print(reverse_string(""))
# should print
--------
# Write your reverse_string function here:
def reverse_string(word):
  reverse = ""
  for i in range(len(word)-1, -1, -1):
    reverse += word[i]
  return reverse

# Uncomment these function calls to test your  function:
print(reverse_string("Codecademy"))
# should print ymedacedoC
print(reverse_string("Hello world!"))
# should print !dlrow olleH
print(reverse_string(""))
# should print
-------------------------
def make_spoonerism(word1, word2):
  char1 = ''
  char2 = ''
  for word in word1:
    char1 = word
    break
  for word in word2:
    char2 = word
    break
  word1 = char2 + word1[1:]
  word2 = char1 + word2[1:]
  return word1 + " " + word2
  
print(make_spoonerism("Codecademy", "Learn"))
# should print Lodecademy Cearn
print(make_spoonerism("Hello", "world!"))
# should print wello Horld!
print(make_spoonerism("a", "b"))
# should print b a
-----------------------
def add_exclamation(word):
  while(len(word)<20):
    word += '!'
  return word  

print(add_exclamation("Codecademy"))
# should print Codecademy!!!!!!!!!!
print(add_exclamation("Codecademy is the best place to learn"))
# should print Codecademy is the best place to learn
